# http://eslint.org/docs/rules/

# Extends - Extend other config
# -- Core: No use --


# Parser Options
root: true
parser: espree
parserOptions:
  ecmaVersion: 2021
  sourceType: script
  ecmaFeatures:
    globalReturn: false
    impliedStrict: false
    jsx: false


# Environments
env:
  es6: true


# Globals
globals: {}


# Plugins - Additional plugins
plugins:
  - unicorn


# Settings - Shared Settings
# settings:


# Rules
rules:

  # Possible Errors
  for-direction: [error]
  getter-return: [error]
  no-async-promise-executor: [error]
  no-await-in-loop: [error]
  no-compare-neg-zero: [error]
  no-cond-assign: [error, always]
  no-console: [error]
  no-constant-condition: [error]
  no-control-regex: [error]
  no-debugger: [error]
  no-dupe-args: [error]
  no-dupe-else-if: [error]
  no-dupe-keys: [error]
  no-duplicate-case: [error]
  no-empty-character-class: [error]
  no-empty: [error, { allowEmptyCatch: false }]
  no-ex-assign: [error]
  no-extra-boolean-cast: [error]
  no-extra-parens: [error, all, { nestedBinaryExpressions: false, ignoreJSX: 'all', enforceForFunctionPrototypeMethods: false }]
  no-extra-semi: [error]
  no-func-assign: [error]
  no-import-assign: [error]
  no-inner-declarations: [error, both]
  no-invalid-regexp: [error]
  no-irregular-whitespace: [error]
  no-loss-of-precision: [error]
  no-misleading-character-class: [error]
  no-obj-calls: [error]
  no-promise-executor-return: [error]
  no-prototype-builtins: [error]
  no-regex-spaces: [error]
  no-setter-return: [error]
  no-sparse-arrays: [error]
  no-template-curly-in-string: [error]
  no-unexpected-multiline: [error]
  no-unreachable: [error]
  no-unreachable-loop: [error]
  no-unsafe-finally: [error]
  no-unsafe-negation: [error, { enforceForOrderingRelations: true }]
  no-unsafe-optional-chaining: [error]
  require-atomic-updates: [error]
  use-isnan: [error, { enforceForSwitchCase: true, enforceForIndexOf: true }]
  valid-typeof: [error, { requireStringLiterals: true }]


  # Best Practices
  accessor-pairs: [error, { setWithoutGet: true, getWithoutSet: false, enforceForClassMembers: true }]
  array-callback-return: [error, { allowImplicit: true }]
  block-scoped-var: [error]
  class-methods-use-this: [off]
  complexity: [off]
  consistent-return: [error]
  curly: [error, all]
  default-case: [error]
  default-param-last: [off]
  dot-location: [error, property]
  dot-notation: [error, { allowKeywords: true }]
  eqeqeq: [error, always]
  grouped-accessor-pairs: [error, getBeforeSet]
  guard-for-in: [error]
  max-classes-per-file: [off]
  no-alert: [error]
  no-caller: [error]
  no-case-declarations: [error]
  no-constructor-return: [off]
  no-div-regex: [error]
  no-else-return: [error]
  no-empty-function: [error]
  no-empty-pattern: [error]
  no-eq-null: [error]
  no-eval: [error]
  no-extend-native: [error]
  no-extra-bind: [error]
  no-extra-label: [error]
  no-fallthrough: [error]
  no-floating-decimal: [error]
  no-global-assign: [error]
  no-implicit-coercion: [error]
  no-implicit-globals: [error]
  no-implied-eval: [error]
  no-invalid-this: [off]
  no-iterator: [error]
  no-labels: [error]
  no-lone-blocks: [error]
  no-loop-func: [error]
  no-magic-numbers: [off]
  no-multi-spaces: [off]
  no-multi-str: [error]
  no-new-func: [error]
  no-nonoctal-decimal-escape: [error]
  no-new-wrappers: [error]
  no-new: [error]
  no-octal-escape: [error]
  no-octal: [error]
  no-param-reassign: [error]
  no-proto: [error]
  no-redeclare: [error, { builtinGlobals: true }]
  no-restricted-properties: [off]
  no-return-assign: [error, always]
  no-return-await: [error]
  no-script-url: [error]
  no-self-assign: [error, { props: true }]
  no-self-compare: [error]
  no-sequences: [error]
  no-throw-literal: [error]
  no-unmodified-loop-condition: [error]
  no-unused-expressions: [error]
  no-unused-labels: [error]
  no-useless-call: [error]
  no-useless-catch: [error]
  no-useless-concat: [error]
  no-useless-escape: [error]
  no-useless-return: [error]
  no-void: [error]
  no-warning-comments: [error, { location: anywhere }]
  no-with: [error]
  prefer-named-capture-group: [error]
  prefer-promise-reject-errors: [error]
  prefer-regex-literals: [error]
  radix: [error, always]
  require-await: [error]
  require-unicode-regexp: [error]
  vars-on-top: [error]
  wrap-iife: [error, inside, { functionPrototypeMethods: true }]
  yoda: [error, never]


  # Strict Mode
  # --- Per sub-config ------


  # Variables
  init-declarations: [off]
  no-delete-var: [error]
  no-label-var: [error]
  no-restricted-globals: [error, window]
  no-shadow-restricted-names: [error]
  no-shadow: [error, { builtinGlobals: false, hoist: all }]
  no-undef-init: [error]
  no-undef: [error]
  no-undefined: [off]
  no-unused-vars: [error]
  no-use-before-define: [error]


  # Stylistic Issues
  array-bracket-newline: [error, consistent]
  array-bracket-spacing: [error, never]
  array-element-newline: [error, consistent]
  block-spacing: [error, always]
  brace-style: [error, 1tbs, { allowSingleLine: true }]
  camelcase: [error, { properties: always }]
  capitalized-comments: [off]
  comma-dangle: [error, never] #always-multiline
  comma-spacing: [error, { before: false, after: true }]
  comma-style: [error, last]
  computed-property-spacing: [error, never, { enforceForClassMembers: true }]
  consistent-this: [error, self]
  eol-last: [error, always]
  func-call-spacing: [error, never]
  func-name-matching: [error]
  func-names: [error, never]
  func-style: [error, expression]
  function-call-argument-newline: [error, consistent]
  function-paren-newline: [error, multiline]
  id-denylist: [off]
  id-length: [off]
  id-match: [off]
  implicit-arrow-linebreak: [off]
  indent:
    - error
    - tab
    - SwitchCase: 1
      VariableDeclarator: first
      outerIIFEBody: 1
      MemberExpression: 1
      FunctionDeclaration:
        parameters: 1
        body: 1
      FunctionExpression:
        parameters: 1
        body: 1
      CallExpression:
        arguments: 1
      ArrayExpression: 1
      ImportDeclaration: 1
      ObjectExpression: 1
      ignoreComments: true
  jsx-quotes: [error, prefer-double]
  key-spacing:
    - error
    - singleLine:
        beforeColon: false
        afterColon: true
      multiLine:
        beforeColon: false
        afterColon: true
        mode: minimum
  keyword-spacing: [error, { before: true, after: true }]
  line-comment-position: [off]
  linebreak-style: [error, unix]
  lines-around-comment: [error, { beforeBlockComment: true, afterBlockComment: false, beforeLineComment: false, afterLineComment: false }]
  lines-between-class-members: [error, always, { exceptAfterSingleLine: true }]
  max-depth: [off]
  max-len: [off]
  max-lines: [off]
  max-lines-per-function: [off]
  max-nested-callbacks: [off]
  max-params: [off]
  max-statements: [off]
  max-statements-per-line: [error, { max: 2 }]
  multiline-comment-style: [off]
  multiline-ternary: [off]
  new-cap: [error, { newIsCap: true, capIsNew: true, properties: false }]
  new-parens: [error, always]
  newline-per-chained-call: [off]
  no-array-constructor: [error]
  no-bitwise: [error]
  no-continue: [error]
  no-inline-comments: [off]
  no-lonely-if: [error]
  no-mixed-operators: [error, { allowSamePrecedence: true }]
  no-mixed-spaces-and-tabs: [error]
  no-multi-assign: [error]
  no-multiple-empty-lines: [error, { max: 100, maxEOF: 1, maxBOF: 0 }]
  no-negated-condition: [off]
  no-nested-ternary: [off]
  no-new-object: [error]
  no-plusplus: [off]
  no-restricted-syntax: [off]
  no-tabs: [off] # Cuz of comments
  no-ternary: [off]
  no-trailing-spaces: [error, { skipBlankLines: false }]
  no-underscore-dangle: [off]
  no-unneeded-ternary: [error, { defaultAssignment: false }]
  no-whitespace-before-property: [error]
  nonblock-statement-body-position: [error, beside]
  object-curly-newline: [error, { multiline: true, consistent: true }]
  object-curly-spacing: [error, always]
  object-property-newline: [off]
  one-var-declaration-per-line: [error, always]
  one-var: [error, never]
  operator-assignment: [error, always]
  operator-linebreak: [error, after, { overrides: { '?': before, ':': before } }]
  padded-blocks: [error, { classes: always, switches: always }]
  padding-line-between-statements:
    - error
    - { blankLine: always, prev: directive, next: '*' }
    - { blankLine: always, prev: '*', next: return }
  prefer-exponentiation-operator: [error]
  prefer-object-spread: [off]
  quote-props: [error, consistent-as-needed, { keywords: true }]
  quotes: [error, single, { avoidEscape: true, allowTemplateLiterals: true }]
  semi: [error, always]
  semi-spacing: [error, { before: false, after: true }]
  semi-style: [off]
  sort-keys: [off]
  sort-vars: [off]
  space-before-blocks: [error, always]
  space-before-function-paren: [error, { anonymous: never, named: never, asyncArrow: always }]
  space-in-parens: [error, never]
  space-infix-ops: [error, { int32Hint: false }]
  space-unary-ops: [error, { words: true, nonwords: false }]
  spaced-comment:
    - error
    - always
    - exceptions: ['-', '*']
      markers: ['=', '--']
      block:
        balanced: true
  switch-colon-spacing: [error, { before: false, after: true }]
  template-tag-spacing: [error, never]
  unicode-bom: [error, never]
  wrap-regex: [error]


  # ECMAScript 6
  arrow-body-style: [error, always]
  arrow-parens: [error, always]
  arrow-spacing: [error, { before: true, after: true }]
  constructor-super: [error]
  generator-star-spacing: [error, before]
  no-class-assign: [error]
  no-confusing-arrow: [error, { allowParens: false }]
  no-const-assign: [error]
  no-dupe-class-members: [error]
  no-duplicate-imports: [error]
  no-new-symbol: [error]
  no-restricted-imports: [off]
  no-this-before-super: [error]
  no-useless-computed-key: [error]
  no-useless-constructor: [error]
  no-useless-rename: [error]
  no-var: [error]
  object-shorthand: [error, always]
  prefer-arrow-callback: [error]
  prefer-const: [error, { destructuring: any, ignoreReadBeforeAssign: false }]
  prefer-destructuring: [error, { array: true, object: true}, { enforceForRenamedProperties: false }]
  prefer-numeric-literals: [error]
  prefer-rest-params: [error]
  prefer-spread: [error]
  prefer-template: [error]
  require-yield: [error]
  rest-spread-spacing: [error, never]
  symbol-description: [error]
  sort-imports: [off]
  template-curly-spacing: [error, never]
  yield-star-spacing: [error, before]




  # 🦄 Unicorn
  unicorn/better-regex: [error]
  unicorn/catch-error-name: [error]
  unicorn/consistent-destructuring: [off]
  unicorn/consistent-function-scoping: [error]
  unicorn/custom-error-definition: [error]
  unicorn/empty-brace-spaces: [error]
  unicorn/error-message: [error]
  unicorn/escape-case: [error]
  unicorn/expiring-todo-comments: [off]
  unicorn/explicit-length-check: [error]
  unicorn/filename-case: [off]
  unicorn/import-index: [error]
  unicorn/import-style: [off]
  unicorn/new-for-builtins: [error]
  unicorn/no-abusive-eslint-disable: [error]
  unicorn/no-array-callback-reference: [off]
  unicorn/no-array-for-each: [off]
  unicorn/no-array-push-push: [error]
  unicorn/no-array-reduce: [off]
  unicorn/no-console-spaces: [error]
  unicorn/no-for-loop: [error]
  unicorn/no-hex-escape: [error]
  unicorn/no-instanceof-array: [error]
  unicorn/no-keyword-prefix: [off]
  unicorn/no-lonely-if: [error]
  unicorn/no-nested-ternary: [off]
  unicorn/no-new-array: [error]
  # unicorn/no-new-buffer (Per sub-config)
  # unicorn/no-process-exit (Per sub-config)
  unicorn/no-null: [off]
  unicorn/no-object-as-default-parameter: [error]
  unicorn/no-this-assignment: [error]
  unicorn/no-unreadable-array-destructuring: [error]
  unicorn/no-unsafe-regex: [off]
  unicorn/no-unused-properties: [error]
  unicorn/no-useless-undefined: [error]
  unicorn/no-zero-fractions: [error]
  unicorn/number-literal-case: [error]
  unicorn/numeric-separators-style: [error, { onlyIfContainsSeparator: true }]
  # unicorn/prefer-add-event-listener (Per sub-config)
  unicorn/prefer-array-find: [error]
  unicorn/prefer-array-flat-map: [error]
  unicorn/prefer-array-index-of: [error]
  unicorn/prefer-array-some: [error]
  unicorn/prefer-date-now: [error]
  unicorn/prefer-default-parameters: [error]
  # unicorn/prefer-dom-node-append (Per sub-config)
  # unicorn/prefer-dom-node-dataset (Per sub-config)
  # unicorn/prefer-dom-node-remove (Per sub-config)
  # unicorn/prefer-dom-node-text-content (Per sub-config)
  unicorn/prefer-includes: [error]
  # unicorn/prefer-keyboard-event-key (Per sub-config)
  # unicorn/prefer-modern-dom-apis (Per sub-config)
  unicorn/prefer-negative-index: [error]
  unicorn/prefer-math-trunc: [error]
  unicorn/prefer-number-properties: [error]
  unicorn/prefer-optional-catch-binding: [error]
  # unicorn/prefer-query-selector (Per sub-config)
  unicorn/prefer-reflect-apply: [off]
  unicorn/prefer-set-has: [off]
  unicorn/prefer-spread: [error]
  unicorn/prefer-string-replace-all: [error]
  unicorn/prefer-string-starts-ends-with: [error]
  unicorn/prefer-string-slice: [error]
  unicorn/prefer-string-trim-start-end: [error]
  unicorn/prefer-ternary: [off]
  unicorn/prefer-regexp-test: [error]
  unicorn/prefer-type-error: [error]
  unicorn/prevent-abbreviations: [error, { checkProperties: true, checkFilenames: false }]
  unicorn/string-content: [off]
  unicorn/throw-new-error: [error]
